name: Agent Controller Cycle

on:
  schedule:
    - cron: '*/5 * * * *' # Runs every 5 minutes
  workflow_dispatch: {} # Allows manual triggering from the Actions tab

jobs:
  run_controller_cycle:
    name: Run Agent Coordination Cycle
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to commit files (e.g., metrics, alert issues if in same repo)
      issues: write # Needed to create/update issues in agent-tasks and agent-controller (for alerts)
      actions: read # Needed to read workflow run statuses for health checks
      # Add other permissions if the controller interacts with more GitHub features directly
      # pull-requests: write # If agents or controller create PRs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # As per architecture document example

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt not found. Installing common dependencies (requests)."
            pip install requests
          fi
        # Ensure 'requests' is in requirements.txt or install explicitly.
        # The agent_controller.py uses the 'requests' library.

      - name: Run Agent Controller Script
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }} # Personal Access Token with repo and workflow scopes
          # PIONEX_API_KEY: ${{ secrets.PIONEX_API_KEY }} # Uncomment if controller needs direct Pionex access
          # PIONEX_API_SECRET: ${{ secrets.PIONEX_API_SECRET }} # Uncomment if controller needs direct Pionex access
        run: python agent_controller.py
